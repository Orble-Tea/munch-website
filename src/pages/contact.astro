---
import Layout from "~/layouts/PageLayout.astro";
import Image from "~/components/common/Image.astro";
import dots from "~/assets/images/bg-design/contact-header-bg.png";
import contactTitle from "~/assets/images/contact-title.png";
import DOMPurify from 'dompurify';
import { JSDOM } from 'jsdom';
import "~/styles/contact.css";
import { preventSpam } from '~/utils/preventSpam'; 

const metadata = {
  title: "Contact",
};

// Create a DOMPurify instance for server-side sanitization
const window = new JSDOM('').window;
const purify = DOMPurify(window);

const errors = { firstName: "", lastName: "", email: "", subject: "", message: "" };
let log = "Fill out the contact form below for inquiries, partnership opportunities, and/or customer support!";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    // Sanitize all inputs, ensuring we're working with strings
    const firstName = purify.sanitize(String(data.get("FirstName") || ''));
    const lastName = purify.sanitize(String(data.get("LastName") || ''));
    const phoneNumber = purify.sanitize(String(data.get("PhoneNumber") || ''));
    const email = purify.sanitize(String(data.get("Email") || ''));
    const subject = purify.sanitize(String(data.get("Subject") || ''));
    const message = purify.sanitize(String(data.get("Message") || ''));

    // Validate form data
    if (firstName.length < 1) {
      errors.firstName = "Please enter your first name.";
    }
    if (lastName.length < 1) {
      errors.lastName = "Please enter your last name.";
    }
    if (!email.includes("@") || !email.includes(".")) {
      errors.email = "Please enter a valid email address.";
    }
    if (!subject) {
      errors.subject = "Please select a subject.";
    }
    if (message.length < 1) {
      errors.message = "Please enter your message.";
    }

    const hasErrors = Object.values(errors).some(msg => msg);
    
    if (!hasErrors) {
      const content = `First Name: ${firstName}\nLast Name: ${lastName}\nPhone Number: ${phoneNumber}\nEmail: ${email}\n\nSubject: ${subject}\n\nMessage: ${message}`;

      const emailData = {
        to: "info@orble-tea.com",
        subject: "Customer Inquiry Form Submission: " + subject,
        text: content,
        "h:Reply-To": email
      };

      const response = await fetch(`${Astro.url.origin}/api/send-email`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(emailData),
      });

      if (!response.ok) {
        throw new Error("An error occurred while sending the email.");
      }

      log = "Form submitted successfully!";
    }
  } catch (error) {
    console.error(error);
    log = "Error: " + (error instanceof Error ? error.message : "An unknown error occurred");
  }
}
---
<Layout metadata={metadata}>
  <div
    id="header"
    class="flex flex-col items-center flex-shrink-0 bg-[#214260] w-full h-[310px]"
  >
    <Image
      src={dots}
      alt="dots"
      style={`max-width: 100%; height: 100%;`}
    />
    <Image
      src={contactTitle}
      alt="Get In Touch"
      width="692px"
      height="71px"
      class="absolute mt-[136px]"
    />
  </div>

  <div id="form-container" class="bg-contact-form bg-gradient-to-b from-[#214260] to-white border-t-[#acc6dd] border-t-4 lg:border-none font-serif pb-32" >
    <div class="flex justify-center">
      <h1 class="w-[815px] contact-subtitle font-serif mt-[71px] mx-8 text-white lg:text-[#1A2634]">
        {log}
      </h1>
    </div>

    <div id="form" class="flex justify-center mt-[71px]">
      <div class="bg-white rounded-md w-[80%] lg:w-[48%] contact-form p-10">
        <form method="POST">
          <!-- Honeypot field - hidden from users but visible to bots -->
          <div class="website-field">
            <label for="website">Website</label>
            <input 
              type="text" 
              name="website" 
              id="website"
              tabindex="-1"
              autocomplete="off"
            />
          </div>

          <div id="textinputs">
            <div class="flex mb-[45px]">
              <div>
                <label for="FirstName" class="contact-label"> First Name</label>
                <input
                  type="text"
                  name="FirstName"
                  required
                  class="border-b-2 border-gray-300 w-[278px] mr-[39px] contact-input"
                />
                {errors.firstName && <p class="text-red-500 text-sm mt-1">{errors.firstName}</p>}
              </div>
              <div>
                <label for="LastName" class="contact-label"> Last Name</label>
                <input
                  type="text"
                  name="LastName"
                  required
                  class="border-b-2 border-gray-300 w-[278px] mr-[39px] contact-input"
                />
                {errors.lastName && <p class="text-red-500 text-sm mt-1">{errors.lastName}</p>}
              </div>
            </div>
            <div class="flex mb-[45px]">
              <div>
                <label for="Email" class="contact-label"> Email</label>
                <input
                  type="email"
                  name="Email"
                  required
                  class="border-b-2 border-gray-300 w-[278px] mr-[39px] contact-input"
                />
                {errors.email && <p class="text-red-500 text-sm mt-1">{errors.email}</p>}
              </div>
              <div>
                <label for="PhoneNumber" class="contact-label">
                  Phone Number
                </label>
                <input
                  type="tel"
                  name="PhoneNumber"
                  class="border-b-2 border-gray-300 w-[278px] mr-[39px] contact-input"
                />
              </div>
            </div>
          </div>

          <div id="subject-select" class="mt-4 mb-[45px]">
            <label for="subject" class="contact-label"> Select Subject</label>

            <div id="radio-buttons" class="flex max-sm:flex-col justify-between flex-wrap mt-4">
              {
                [
                  "General Inquiry",
                  "Partnerships",
                  "Customer Support",
                  "Other",
                ].map((subject) => (
                  <div>
                    <input
                      type="radio"
                      id={subject.toLowerCase().replace(/\s/g, "-")}
                      name="Subject"
                      value={subject.toLowerCase().replace(/\s/g, "-")}
                      class="mr-[10px]"
                      required
                    />
                    <label
                      for={subject.toLowerCase().replace(/\s/g, "-")}
                      class="text-sm mr-[17px]"
                    >
                      {subject}
                    </label>
                  </div>
                ))
              }
            </div>
            {errors.subject && <p class="text-red-500 text-sm mt-1">{errors.subject}</p>}
          </div>

          <div class="flex flex-col my-[45px]">
            <label for="message" class="contact-label"> Message</label>
            <input
              type="text"
              name="Message"
              id="message"
              required
              placeholder="Write your message..."
              class="border-b-2 border-gray-300 w-full contact-input pb-[10px] mt-3 placeholder-[#BDBDBD]"
              maxlength="500"
            />
            {errors.message && <p class="text-red-500 text-sm mt-1">{errors.message}</p>}
          </div>

          <div class="flex justify-end mb-2">
            <button type="submit" class="munch-btn font-serif bg-[#214260]">
              SEND MESSAGE
            </button>
          </div>
        </form>
      </div>
    </div>

<script src="~/utils/contactForm.js"></script>
  </div>
</Layout>